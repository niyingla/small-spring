<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	         http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="husband" class="cn.bugstack.springframework.test.bean.Husband">
        <property name="wifiName" value="你猜"/>
        <property name="marriageDate" value="2021-08-08"/>
        <property name="wife" ref="wife"/>
    </bean>

    <!--扫描注解类路径-->
    <context:component-scan base-package="cn.bugstack.springframework.test.bean"/>

    <!--扫描属性配置文件-->
    <bean class="cn.bugstack.springframework.beans.factory.PropertyPlaceholderConfigurer">
        <property name="locations" value="classpath:token.properties,classpath:info.properties"/>
    </bean>

    <bean id="wife" class="cn.bugstack.springframework.test.bean.Wife">
        <property name="husband" ref="husband"/>
        <property name="token" value="${token}"/>
    </bean>

    <bean class="cn.bugstack.springframework.test.event.ContextRefreshedEventListener"/>

    <bean class="cn.bugstack.springframework.test.event.CustomEventListener"/>

    <bean class="cn.bugstack.springframework.test.event.ContextClosedEventListener"/>

    <bean id="husbandMother" class="cn.bugstack.springframework.test.bean.HusbandMother"/>

    <bean id="conversionService" class="cn.bugstack.springframework.context.support.ConversionServiceFactoryBean">
        <property name="converters" ref="converters"/>
    </bean>

    <bean class="cn.bugstack.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>

    <bean id="beforeMethodInterceptor" class="cn.bugstack.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor">
        <property name="advice" ref="beforeAdvice"/>
    </bean>

    <bean id="afterMethodInterceptor" class="cn.bugstack.springframework.aop.framework.adapter.MethodAfterAdviceInterceptor">
        <property name="advice" ref="afterAdvice"/>
    </bean>

    <bean id="aroundMethodInterceptor" class="cn.bugstack.springframework.aop.framework.adapter.MethodAroundInterceptor">
        <property name="advice" ref="aroundAdvice"/>
    </bean>

    <bean id="beforePointcutAdvisor" class="cn.bugstack.springframework.aop.aspectj.AspectJExpressionPointcutAdvisor">
        <property name="expression" value="execution(* cn.bugstack.springframework.test.bean.IUserService.*(..))"/>
        <property name="advice" ref="beforeMethodInterceptor"/>
    </bean>

    <bean id="afterPointcutAdvisor" class="cn.bugstack.springframework.aop.aspectj.AspectJExpressionPointcutAdvisor">
        <property name="expression" value="execution(* cn.bugstack.springframework.test.bean.IUserService.*(..))"/>
        <property name="advice" ref="afterMethodInterceptor"/>
    </bean>

    <bean id="aroundPointcutAdvisor" class="cn.bugstack.springframework.aop.aspectj.AspectJExpressionPointcutAdvisor">
        <property name="expression" value="execution(* cn.bugstack.springframework.test.bean.IUserService.*(..))"/>
        <property name="advice" ref="aroundMethodInterceptor"/>
    </bean>

    <bean id="converters" class="cn.bugstack.springframework.test.converter.ConvertersFactoryBean"/>

</beans>
